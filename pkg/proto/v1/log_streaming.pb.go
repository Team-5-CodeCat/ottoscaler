// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: log_streaming.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StageType - Pipeline Stage의 타입을 정의하는 Enum
type StageType int32

const (
	// Proto3 관례: 0은 미지정/알 수 없는 타입
	StageType_STAGE_TYPE_UNSPECIFIED StageType = 0
	// 빌드 단계 (컴파일, 패키징 등)
	StageType_STAGE_TYPE_BUILD StageType = 1
	// 테스트 단계 (단위 테스트, 통합 테스트 등)
	StageType_STAGE_TYPE_TEST StageType = 2
	// 배포 단계 (스테이징, 프로덕션 배포 등)
	StageType_STAGE_TYPE_DEPLOY StageType = 3
	// 환경 설정 단계 (초기화, 의존성 설치 등)
	StageType_STAGE_TYPE_SETUP StageType = 4
	// 정리 단계 (리소스 정리, 캐시 삭제 등)
	StageType_STAGE_TYPE_CLEANUP StageType = 5
	// 알림 단계 (이메일, 슬랙 알림 등)
	StageType_STAGE_TYPE_NOTIFY StageType = 6
	// 승인 대기 단계 (수동 승인 필요)
	StageType_STAGE_TYPE_APPROVAL StageType = 7
	// 사용자 정의 단계 (위 카테고리에 속하지 않는 경우)
	StageType_STAGE_TYPE_CUSTOM StageType = 100
)

// Enum value maps for StageType.
var (
	StageType_name = map[int32]string{
		0:   "STAGE_TYPE_UNSPECIFIED",
		1:   "STAGE_TYPE_BUILD",
		2:   "STAGE_TYPE_TEST",
		3:   "STAGE_TYPE_DEPLOY",
		4:   "STAGE_TYPE_SETUP",
		5:   "STAGE_TYPE_CLEANUP",
		6:   "STAGE_TYPE_NOTIFY",
		7:   "STAGE_TYPE_APPROVAL",
		100: "STAGE_TYPE_CUSTOM",
	}
	StageType_value = map[string]int32{
		"STAGE_TYPE_UNSPECIFIED": 0,
		"STAGE_TYPE_BUILD":       1,
		"STAGE_TYPE_TEST":        2,
		"STAGE_TYPE_DEPLOY":      3,
		"STAGE_TYPE_SETUP":       4,
		"STAGE_TYPE_CLEANUP":     5,
		"STAGE_TYPE_NOTIFY":      6,
		"STAGE_TYPE_APPROVAL":    7,
		"STAGE_TYPE_CUSTOM":      100,
	}
)

func (x StageType) Enum() *StageType {
	p := new(StageType)
	*p = x
	return p
}

func (x StageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StageType) Descriptor() protoreflect.EnumDescriptor {
	return file_log_streaming_proto_enumTypes[0].Descriptor()
}

func (StageType) Type() protoreflect.EnumType {
	return &file_log_streaming_proto_enumTypes[0]
}

func (x StageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StageType.Descriptor instead.
func (StageType) EnumDescriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{0}
}

// StageStatus - Pipeline Stage 상태
type StageStatus int32

const (
	StageStatus_STAGE_PENDING   StageStatus = 0 // 대기 중
	StageStatus_STAGE_RUNNING   StageStatus = 1 // 실행 중
	StageStatus_STAGE_COMPLETED StageStatus = 2 // 완료
	StageStatus_STAGE_FAILED    StageStatus = 3 // 실패
	StageStatus_STAGE_CANCELLED StageStatus = 4 // 취소됨
	StageStatus_STAGE_SKIPPED   StageStatus = 5 // 건너뜀 (이전 Stage 실패로)
	StageStatus_STAGE_RETRYING  StageStatus = 6 // 재시도 중
)

// Enum value maps for StageStatus.
var (
	StageStatus_name = map[int32]string{
		0: "STAGE_PENDING",
		1: "STAGE_RUNNING",
		2: "STAGE_COMPLETED",
		3: "STAGE_FAILED",
		4: "STAGE_CANCELLED",
		5: "STAGE_SKIPPED",
		6: "STAGE_RETRYING",
	}
	StageStatus_value = map[string]int32{
		"STAGE_PENDING":   0,
		"STAGE_RUNNING":   1,
		"STAGE_COMPLETED": 2,
		"STAGE_FAILED":    3,
		"STAGE_CANCELLED": 4,
		"STAGE_SKIPPED":   5,
		"STAGE_RETRYING":  6,
	}
)

func (x StageStatus) Enum() *StageStatus {
	p := new(StageStatus)
	*p = x
	return p
}

func (x StageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_log_streaming_proto_enumTypes[1].Descriptor()
}

func (StageStatus) Type() protoreflect.EnumType {
	return &file_log_streaming_proto_enumTypes[1]
}

func (x StageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StageStatus.Descriptor instead.
func (StageStatus) EnumDescriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{1}
}

// Status - 로그 처리 결과 상태
//
// ✅ ACK (0): 성공적으로 처리됨
// 🔄 RETRY (1): 일시적 오류, 재시도 필요 (네트워크 지연, 서버 부하 등)
// ❌ DROP (2): 영구적 오류, 해당 로그 포기 (잘못된 형식, 권한 없음 등)
type LogResponse_Status int32

const (
	LogResponse_ACK   LogResponse_Status = 0 // 성공적으로 받고 처리함
	LogResponse_RETRY LogResponse_Status = 1 // 일시적 실패, 재시도 요청
	LogResponse_DROP  LogResponse_Status = 2 // 영구적 실패, 로그 포기
)

// Enum value maps for LogResponse_Status.
var (
	LogResponse_Status_name = map[int32]string{
		0: "ACK",
		1: "RETRY",
		2: "DROP",
	}
	LogResponse_Status_value = map[string]int32{
		"ACK":   0,
		"RETRY": 1,
		"DROP":  2,
	}
)

func (x LogResponse_Status) Enum() *LogResponse_Status {
	p := new(LogResponse_Status)
	*p = x
	return p
}

func (x LogResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_log_streaming_proto_enumTypes[2].Descriptor()
}

func (LogResponse_Status) Type() protoreflect.EnumType {
	return &file_log_streaming_proto_enumTypes[2]
}

func (x LogResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogResponse_Status.Descriptor instead.
func (LogResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{1, 0}
}

type RegistrationResponse_Status int32

const (
	RegistrationResponse_SUCCESS            RegistrationResponse_Status = 0
	RegistrationResponse_ALREADY_REGISTERED RegistrationResponse_Status = 1
	RegistrationResponse_SERVER_FULL        RegistrationResponse_Status = 2
	RegistrationResponse_INVALID_REQUEST    RegistrationResponse_Status = 3
)

// Enum value maps for RegistrationResponse_Status.
var (
	RegistrationResponse_Status_name = map[int32]string{
		0: "SUCCESS",
		1: "ALREADY_REGISTERED",
		2: "SERVER_FULL",
		3: "INVALID_REQUEST",
	}
	RegistrationResponse_Status_value = map[string]int32{
		"SUCCESS":            0,
		"ALREADY_REGISTERED": 1,
		"SERVER_FULL":        2,
		"INVALID_REQUEST":    3,
	}
)

func (x RegistrationResponse_Status) Enum() *RegistrationResponse_Status {
	p := new(RegistrationResponse_Status)
	*p = x
	return p
}

func (x RegistrationResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistrationResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_log_streaming_proto_enumTypes[3].Descriptor()
}

func (RegistrationResponse_Status) Type() protoreflect.EnumType {
	return &file_log_streaming_proto_enumTypes[3]
}

func (x RegistrationResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistrationResponse_Status.Descriptor instead.
func (RegistrationResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{4, 0}
}

type ScaleResponse_Status int32

const (
	ScaleResponse_SUCCESS           ScaleResponse_Status = 0 // 성공
	ScaleResponse_FAILED            ScaleResponse_Status = 1 // 실패
	ScaleResponse_PARTIAL_SUCCESS   ScaleResponse_Status = 2 // 부분 성공 (일부 Pod만 처리됨)
	ScaleResponse_ALREADY_PROCESSED ScaleResponse_Status = 3 // 이미 처리된 요청
)

// Enum value maps for ScaleResponse_Status.
var (
	ScaleResponse_Status_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILED",
		2: "PARTIAL_SUCCESS",
		3: "ALREADY_PROCESSED",
	}
	ScaleResponse_Status_value = map[string]int32{
		"SUCCESS":           0,
		"FAILED":            1,
		"PARTIAL_SUCCESS":   2,
		"ALREADY_PROCESSED": 3,
	}
)

func (x ScaleResponse_Status) Enum() *ScaleResponse_Status {
	p := new(ScaleResponse_Status)
	*p = x
	return p
}

func (x ScaleResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScaleResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_log_streaming_proto_enumTypes[4].Descriptor()
}

func (ScaleResponse_Status) Type() protoreflect.EnumType {
	return &file_log_streaming_proto_enumTypes[4]
}

func (x ScaleResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScaleResponse_Status.Descriptor instead.
func (ScaleResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{7, 0}
}

type LogForwardResponse_Status int32

const (
	LogForwardResponse_ACK   LogForwardResponse_Status = 0 // 성공적으로 받고 처리함
	LogForwardResponse_RETRY LogForwardResponse_Status = 1 // 일시적 실패, 재시도 요청
	LogForwardResponse_DROP  LogForwardResponse_Status = 2 // 영구적 실패, 로그 포기
)

// Enum value maps for LogForwardResponse_Status.
var (
	LogForwardResponse_Status_name = map[int32]string{
		0: "ACK",
		1: "RETRY",
		2: "DROP",
	}
	LogForwardResponse_Status_value = map[string]int32{
		"ACK":   0,
		"RETRY": 1,
		"DROP":  2,
	}
)

func (x LogForwardResponse_Status) Enum() *LogForwardResponse_Status {
	p := new(LogForwardResponse_Status)
	*p = x
	return p
}

func (x LogForwardResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogForwardResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_log_streaming_proto_enumTypes[5].Descriptor()
}

func (LogForwardResponse_Status) Type() protoreflect.EnumType {
	return &file_log_streaming_proto_enumTypes[5]
}

func (x LogForwardResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogForwardResponse_Status.Descriptor instead.
func (LogForwardResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{12, 0}
}

type WorkerStatusNotification_StatusType int32

const (
	WorkerStatusNotification_CREATED    WorkerStatusNotification_StatusType = 0 // Pod 생성됨
	WorkerStatusNotification_RUNNING    WorkerStatusNotification_StatusType = 1 // Pod 실행 중
	WorkerStatusNotification_COMPLETED  WorkerStatusNotification_StatusType = 2 // Pod 성공 완료
	WorkerStatusNotification_FAILED     WorkerStatusNotification_StatusType = 3 // Pod 실패
	WorkerStatusNotification_TERMINATED WorkerStatusNotification_StatusType = 4 // Pod 강제 종료
)

// Enum value maps for WorkerStatusNotification_StatusType.
var (
	WorkerStatusNotification_StatusType_name = map[int32]string{
		0: "CREATED",
		1: "RUNNING",
		2: "COMPLETED",
		3: "FAILED",
		4: "TERMINATED",
	}
	WorkerStatusNotification_StatusType_value = map[string]int32{
		"CREATED":    0,
		"RUNNING":    1,
		"COMPLETED":  2,
		"FAILED":     3,
		"TERMINATED": 4,
	}
)

func (x WorkerStatusNotification_StatusType) Enum() *WorkerStatusNotification_StatusType {
	p := new(WorkerStatusNotification_StatusType)
	*p = x
	return p
}

func (x WorkerStatusNotification_StatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkerStatusNotification_StatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_log_streaming_proto_enumTypes[6].Descriptor()
}

func (WorkerStatusNotification_StatusType) Type() protoreflect.EnumType {
	return &file_log_streaming_proto_enumTypes[6]
}

func (x WorkerStatusNotification_StatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkerStatusNotification_StatusType.Descriptor instead.
func (WorkerStatusNotification_StatusType) EnumDescriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{13, 0}
}

type WorkerStatusAck_Status int32

const (
	WorkerStatusAck_RECEIVED WorkerStatusAck_Status = 0 // 성공적으로 받음
	WorkerStatusAck_IGNORED  WorkerStatusAck_Status = 1 // 무시됨 (중복 등)
	WorkerStatusAck_ERROR    WorkerStatusAck_Status = 2 // 처리 중 에러
)

// Enum value maps for WorkerStatusAck_Status.
var (
	WorkerStatusAck_Status_name = map[int32]string{
		0: "RECEIVED",
		1: "IGNORED",
		2: "ERROR",
	}
	WorkerStatusAck_Status_value = map[string]int32{
		"RECEIVED": 0,
		"IGNORED":  1,
		"ERROR":    2,
	}
)

func (x WorkerStatusAck_Status) Enum() *WorkerStatusAck_Status {
	p := new(WorkerStatusAck_Status)
	*p = x
	return p
}

func (x WorkerStatusAck_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkerStatusAck_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_log_streaming_proto_enumTypes[7].Descriptor()
}

func (WorkerStatusAck_Status) Type() protoreflect.EnumType {
	return &file_log_streaming_proto_enumTypes[7]
}

func (x WorkerStatusAck_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkerStatusAck_Status.Descriptor instead.
func (WorkerStatusAck_Status) EnumDescriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{14, 0}
}

// LogEntry - Worker Pod에서 생성되는 단일 로그 엔트리
//
// 📝 로그 구조 설명:
// - Worker Pod의 stdout/stderr에서 캐치된 한 줄의 로그를 표현
// - 시간 정보와 함께 구조화된 형태로 전송
// - NestJS 서버에서 파싱하여 웹 인터페이스에 실시간 표시
//
// 🔍 사용 예시:
//
//	{
//	  "worker_id": "otto-agent-1-abc123",
//	  "task_id": "task-456",
//	  "timestamp": "2025-09-01T12:34:56.789Z",
//	  "level": "INFO",
//	  "source": "stdout",
//	  "message": "Task processing started...",
//	  "metadata": {"step": "initialization"}
//	}
type LogEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Worker Pod의 고유 식별자 (예: "otto-agent-1-abc123")
	// Main Pod에서 생성한 Worker Pod의 이름과 일치해야 함
	WorkerId string `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	// Redis 이벤트에서 온 작업 식별자 (예: "task-456")
	// 어떤 scale_up 이벤트로 인해 생성된 작업인지 추적
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// 로그 생성 시간 (RFC3339 형식: "2025-09-01T12:34:56.789Z")
	// Worker Pod 내부에서 로그가 실제로 발생한 시점
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// 로그 레벨 (INFO, ERROR, DEBUG, WARN 등)
	// 로그의 중요도나 유형을 나타냄
	Level string `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
	// 로그 소스 (stdout, stderr)
	// 표준 출력인지 에러 출력인지 구분
	Source string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	// 실제 로그 메시지 내용 (cmd창에 출력되는 한 줄)
	// Worker Pod의 작업 진행 상황, 에러, 디버그 정보 등
	Message string `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	// 추가 메타데이터 (선택적)
	// 작업 단계, 파일명, 함수명 등 부가 정보
	Metadata      map[string]string `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_log_streaming_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{0}
}

func (x *LogEntry) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *LogEntry) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *LogEntry) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *LogEntry) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogEntry) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEntry) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// LogResponse - NestJS 서버에서 Worker Pod로의 응답 메시지
//
// 🔄 응답 처리 로직:
// - ACK: 로그 성공적으로 받음, 다음 로그 전송 가능
// - RETRY: 일시적 실패, 같은 로그를 다시 전송 필요
// - DROP: 영구적 실패, 해당 로그 포기하고 다음으로 진행
//
// 📊 백프레셔(Backpressure) 처리:
// - 서버 과부하 시 RETRY 응답으로 Worker Pod 전송 속도 조절
// - sequence 번호로 로그 순서 보장
type LogResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 로그 처리 결과 상태
	Status LogResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ottoscaler.v1.LogResponse_Status" json:"status,omitempty"`
	// 디버깅용 메시지 (선택적)
	// 에러 이유나 추가 정보 제공
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 순서 보장을 위한 시퀀스 번호 (선택적)
	// 로그 전송 순서와 처리 순서 매칭
	Sequence      int64 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	mi := &file_log_streaming_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{1}
}

func (x *LogResponse) GetStatus() LogResponse_Status {
	if x != nil {
		return x.Status
	}
	return LogResponse_ACK
}

func (x *LogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogResponse) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// WorkerRegistration contains information about a starting worker
type WorkerRegistration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Worker pod identifier
	WorkerId string `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	// Task identifier this worker is handling
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Worker pod metadata
	Metadata *WorkerMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// NestJS server endpoint (for health checks)
	ServerEndpoint string `protobuf:"bytes,4,opt,name=server_endpoint,json=serverEndpoint,proto3" json:"server_endpoint,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorkerRegistration) Reset() {
	*x = WorkerRegistration{}
	mi := &file_log_streaming_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerRegistration) ProtoMessage() {}

func (x *WorkerRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerRegistration.ProtoReflect.Descriptor instead.
func (*WorkerRegistration) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{2}
}

func (x *WorkerRegistration) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerRegistration) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *WorkerRegistration) GetMetadata() *WorkerMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *WorkerRegistration) GetServerEndpoint() string {
	if x != nil {
		return x.ServerEndpoint
	}
	return ""
}

// WorkerMetadata contains Kubernetes pod information
type WorkerMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pod name in Kubernetes
	PodName string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	// Kubernetes namespace
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Node where pod is running
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Pod creation timestamp
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Labels applied to the pod
	Labels        map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerMetadata) Reset() {
	*x = WorkerMetadata{}
	mi := &file_log_streaming_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerMetadata) ProtoMessage() {}

func (x *WorkerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerMetadata.ProtoReflect.Descriptor instead.
func (*WorkerMetadata) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{3}
}

func (x *WorkerMetadata) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *WorkerMetadata) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *WorkerMetadata) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *WorkerMetadata) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WorkerMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// RegistrationResponse confirms worker registration
type RegistrationResponse struct {
	state   protoimpl.MessageState      `protogen:"open.v1"`
	Status  RegistrationResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ottoscaler.v1.RegistrationResponse_Status" json:"status,omitempty"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Server-assigned session ID for this worker
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Recommended logging configuration
	Config        *LoggingConfig `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistrationResponse) Reset() {
	*x = RegistrationResponse{}
	mi := &file_log_streaming_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse) ProtoMessage() {}

func (x *RegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse.ProtoReflect.Descriptor instead.
func (*RegistrationResponse) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{4}
}

func (x *RegistrationResponse) GetStatus() RegistrationResponse_Status {
	if x != nil {
		return x.Status
	}
	return RegistrationResponse_SUCCESS
}

func (x *RegistrationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegistrationResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RegistrationResponse) GetConfig() *LoggingConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// LoggingConfig contains server preferences for logging
type LoggingConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum logs per second from this worker
	RateLimit int32 `protobuf:"varint,1,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
	// Buffer size for batching logs
	BufferSize int32 `protobuf:"varint,2,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	// Maximum message size in bytes
	MaxMessageSize int32 `protobuf:"varint,3,opt,name=max_message_size,json=maxMessageSize,proto3" json:"max_message_size,omitempty"`
	// Whether to include full metadata
	IncludeMetadata bool `protobuf:"varint,4,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LoggingConfig) Reset() {
	*x = LoggingConfig{}
	mi := &file_log_streaming_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingConfig) ProtoMessage() {}

func (x *LoggingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingConfig.ProtoReflect.Descriptor instead.
func (*LoggingConfig) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{5}
}

func (x *LoggingConfig) GetRateLimit() int32 {
	if x != nil {
		return x.RateLimit
	}
	return 0
}

func (x *LoggingConfig) GetBufferSize() int32 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

func (x *LoggingConfig) GetMaxMessageSize() int32 {
	if x != nil {
		return x.MaxMessageSize
	}
	return 0
}

func (x *LoggingConfig) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

// ScaleRequest - 스케일링 요청 메시지
type ScaleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 작업 고유 식별자 (CI/CD 작업 ID)
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Git 저장소 URL
	Repository string `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	// Git 커밋 SHA
	CommitSha string `protobuf:"bytes,3,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	// 스케일링할 Worker Pod 수 (scale_up 시 생성할 수, scale_down 시 목표 수)
	WorkerCount int32 `protobuf:"varint,4,opt,name=worker_count,json=workerCount,proto3" json:"worker_count,omitempty"`
	// CI/CD 빌드 설정 (환경 변수, 명령어 등)
	BuildConfig map[string]string `protobuf:"bytes,5,rep,name=build_config,json=buildConfig,proto3" json:"build_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 요청을 시작한 주체 (사용자 또는 시스템)
	TriggeredBy string `protobuf:"bytes,6,opt,name=triggered_by,json=triggeredBy,proto3" json:"triggered_by,omitempty"`
	// 스케일링 요청 사유
	Reason string `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`
	// 추가 메타데이터
	Metadata      map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScaleRequest) Reset() {
	*x = ScaleRequest{}
	mi := &file_log_streaming_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleRequest) ProtoMessage() {}

func (x *ScaleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleRequest.ProtoReflect.Descriptor instead.
func (*ScaleRequest) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{6}
}

func (x *ScaleRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ScaleRequest) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *ScaleRequest) GetCommitSha() string {
	if x != nil {
		return x.CommitSha
	}
	return ""
}

func (x *ScaleRequest) GetWorkerCount() int32 {
	if x != nil {
		return x.WorkerCount
	}
	return 0
}

func (x *ScaleRequest) GetBuildConfig() map[string]string {
	if x != nil {
		return x.BuildConfig
	}
	return nil
}

func (x *ScaleRequest) GetTriggeredBy() string {
	if x != nil {
		return x.TriggeredBy
	}
	return ""
}

func (x *ScaleRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ScaleRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ScaleResponse - 스케일링 응답 메시지
type ScaleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 응답 상태
	Status ScaleResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ottoscaler.v1.ScaleResponse_Status" json:"status,omitempty"`
	// 응답 메시지 (에러 정보 또는 성공 메시지)
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 실제로 처리된 Worker Pod 수
	ProcessedCount int32 `protobuf:"varint,3,opt,name=processed_count,json=processedCount,proto3" json:"processed_count,omitempty"`
	// 생성/삭제된 Worker Pod 목록
	WorkerPodNames []string `protobuf:"bytes,4,rep,name=worker_pod_names,json=workerPodNames,proto3" json:"worker_pod_names,omitempty"`
	// 처리 시작 시간 (RFC3339 형식)
	StartedAt string `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// 처리 완료 시간 (RFC3339 형식)
	CompletedAt   string `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScaleResponse) Reset() {
	*x = ScaleResponse{}
	mi := &file_log_streaming_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleResponse) ProtoMessage() {}

func (x *ScaleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleResponse.ProtoReflect.Descriptor instead.
func (*ScaleResponse) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{7}
}

func (x *ScaleResponse) GetStatus() ScaleResponse_Status {
	if x != nil {
		return x.Status
	}
	return ScaleResponse_SUCCESS
}

func (x *ScaleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ScaleResponse) GetProcessedCount() int32 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *ScaleResponse) GetWorkerPodNames() []string {
	if x != nil {
		return x.WorkerPodNames
	}
	return nil
}

func (x *ScaleResponse) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *ScaleResponse) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

// WorkerStatusRequest - Worker 상태 조회 요청
type WorkerStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 특정 작업 ID로 필터링 (비어있으면 전체 조회)
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// 특정 Worker Pod 이름으로 필터링
	WorkerPodName string `protobuf:"bytes,2,opt,name=worker_pod_name,json=workerPodName,proto3" json:"worker_pod_name,omitempty"`
	// 상태로 필터링 ("running", "pending", "succeeded", "failed")
	StatusFilter  string `protobuf:"bytes,3,opt,name=status_filter,json=statusFilter,proto3" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerStatusRequest) Reset() {
	*x = WorkerStatusRequest{}
	mi := &file_log_streaming_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStatusRequest) ProtoMessage() {}

func (x *WorkerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStatusRequest.ProtoReflect.Descriptor instead.
func (*WorkerStatusRequest) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{8}
}

func (x *WorkerStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *WorkerStatusRequest) GetWorkerPodName() string {
	if x != nil {
		return x.WorkerPodName
	}
	return ""
}

func (x *WorkerStatusRequest) GetStatusFilter() string {
	if x != nil {
		return x.StatusFilter
	}
	return ""
}

// WorkerStatusResponse - Worker 상태 조회 응답
type WorkerStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 전체 Worker Pod 수
	TotalCount int32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// 상태별 Worker Pod 수
	RunningCount   int32 `protobuf:"varint,2,opt,name=running_count,json=runningCount,proto3" json:"running_count,omitempty"`
	PendingCount   int32 `protobuf:"varint,3,opt,name=pending_count,json=pendingCount,proto3" json:"pending_count,omitempty"`
	SucceededCount int32 `protobuf:"varint,4,opt,name=succeeded_count,json=succeededCount,proto3" json:"succeeded_count,omitempty"`
	FailedCount    int32 `protobuf:"varint,5,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`
	// Worker Pod 상세 정보 목록
	Workers       []*WorkerPodStatus `protobuf:"bytes,6,rep,name=workers,proto3" json:"workers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerStatusResponse) Reset() {
	*x = WorkerStatusResponse{}
	mi := &file_log_streaming_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStatusResponse) ProtoMessage() {}

func (x *WorkerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStatusResponse.ProtoReflect.Descriptor instead.
func (*WorkerStatusResponse) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{9}
}

func (x *WorkerStatusResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *WorkerStatusResponse) GetRunningCount() int32 {
	if x != nil {
		return x.RunningCount
	}
	return 0
}

func (x *WorkerStatusResponse) GetPendingCount() int32 {
	if x != nil {
		return x.PendingCount
	}
	return 0
}

func (x *WorkerStatusResponse) GetSucceededCount() int32 {
	if x != nil {
		return x.SucceededCount
	}
	return 0
}

func (x *WorkerStatusResponse) GetFailedCount() int32 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *WorkerStatusResponse) GetWorkers() []*WorkerPodStatus {
	if x != nil {
		return x.Workers
	}
	return nil
}

// WorkerPodStatus - 개별 Worker Pod 상태 정보
type WorkerPodStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pod 이름
	PodName string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	// 작업 ID
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Pod 상태 ("pending", "running", "succeeded", "failed")
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// Pod 생성 시간
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Pod 시작 시간
	StartedAt string `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Pod 완료 시간 (완료된 경우)
	CompletedAt string `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// 실행 중인 노드
	NodeName string `protobuf:"bytes,7,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Pod IP
	PodIp string `protobuf:"bytes,8,opt,name=pod_ip,json=podIp,proto3" json:"pod_ip,omitempty"`
	// 추가 라벨
	Labels map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 에러 메시지 (실패한 경우)
	ErrorMessage  string `protobuf:"bytes,10,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerPodStatus) Reset() {
	*x = WorkerPodStatus{}
	mi := &file_log_streaming_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerPodStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerPodStatus) ProtoMessage() {}

func (x *WorkerPodStatus) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerPodStatus.ProtoReflect.Descriptor instead.
func (*WorkerPodStatus) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{10}
}

func (x *WorkerPodStatus) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *WorkerPodStatus) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *WorkerPodStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkerPodStatus) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WorkerPodStatus) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *WorkerPodStatus) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *WorkerPodStatus) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *WorkerPodStatus) GetPodIp() string {
	if x != nil {
		return x.PodIp
	}
	return ""
}

func (x *WorkerPodStatus) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *WorkerPodStatus) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// WorkerLogEntry - Ottoscaler에서 Otto-handler로 전달하는 Worker 로그 엔트리
type WorkerLogEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Worker Pod의 고유 식별자
	WorkerId string `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	// 작업 식별자 (CI/CD 작업 ID)
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// 로그 생성 시간 (RFC3339 형식)
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// 로그 레벨 (INFO, ERROR, DEBUG, WARN)
	Level string `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
	// 로그 소스 (stdout, stderr)
	Source string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	// 실제 로그 메시지 내용
	Message string `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	// Pod 관련 메타데이터
	PodMetadata *WorkerMetadata `protobuf:"bytes,7,opt,name=pod_metadata,json=podMetadata,proto3" json:"pod_metadata,omitempty"`
	// 추가 메타데이터
	Metadata      map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerLogEntry) Reset() {
	*x = WorkerLogEntry{}
	mi := &file_log_streaming_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerLogEntry) ProtoMessage() {}

func (x *WorkerLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerLogEntry.ProtoReflect.Descriptor instead.
func (*WorkerLogEntry) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{11}
}

func (x *WorkerLogEntry) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerLogEntry) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *WorkerLogEntry) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *WorkerLogEntry) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *WorkerLogEntry) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *WorkerLogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WorkerLogEntry) GetPodMetadata() *WorkerMetadata {
	if x != nil {
		return x.PodMetadata
	}
	return nil
}

func (x *WorkerLogEntry) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// LogForwardResponse - Otto-handler에서 Ottoscaler로의 로그 처리 응답
type LogForwardResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 로그 처리 결과 상태
	Status LogForwardResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ottoscaler.v1.LogForwardResponse_Status" json:"status,omitempty"`
	// 응답 메시지 (에러 정보 또는 성공 메시지)
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 순서 보장을 위한 시퀀스 번호
	Sequence int64 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// 백프레셔 제어: 다음 로그까지 대기 시간 (ms)
	ThrottleMs    int32 `protobuf:"varint,4,opt,name=throttle_ms,json=throttleMs,proto3" json:"throttle_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogForwardResponse) Reset() {
	*x = LogForwardResponse{}
	mi := &file_log_streaming_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogForwardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogForwardResponse) ProtoMessage() {}

func (x *LogForwardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogForwardResponse.ProtoReflect.Descriptor instead.
func (*LogForwardResponse) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{12}
}

func (x *LogForwardResponse) GetStatus() LogForwardResponse_Status {
	if x != nil {
		return x.Status
	}
	return LogForwardResponse_ACK
}

func (x *LogForwardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogForwardResponse) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *LogForwardResponse) GetThrottleMs() int32 {
	if x != nil {
		return x.ThrottleMs
	}
	return 0
}

// WorkerStatusNotification - Worker Pod 상태 변경 알림
type WorkerStatusNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Worker Pod 이름
	WorkerId string `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	// 작업 ID
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// 상태 타입
	Status WorkerStatusNotification_StatusType `protobuf:"varint,3,opt,name=status,proto3,enum=ottoscaler.v1.WorkerStatusNotification_StatusType" json:"status,omitempty"`
	// 상태 변경 시간
	Timestamp string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// 상태 변경 이유/메시지
	Reason string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	// 추가 메타데이터
	Metadata      map[string]string `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerStatusNotification) Reset() {
	*x = WorkerStatusNotification{}
	mi := &file_log_streaming_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerStatusNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStatusNotification) ProtoMessage() {}

func (x *WorkerStatusNotification) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStatusNotification.ProtoReflect.Descriptor instead.
func (*WorkerStatusNotification) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{13}
}

func (x *WorkerStatusNotification) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerStatusNotification) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *WorkerStatusNotification) GetStatus() WorkerStatusNotification_StatusType {
	if x != nil {
		return x.Status
	}
	return WorkerStatusNotification_CREATED
}

func (x *WorkerStatusNotification) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *WorkerStatusNotification) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *WorkerStatusNotification) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// WorkerStatusAck - Worker 상태 알림에 대한 응답
type WorkerStatusAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        WorkerStatusAck_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ottoscaler.v1.WorkerStatusAck_Status" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerStatusAck) Reset() {
	*x = WorkerStatusAck{}
	mi := &file_log_streaming_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerStatusAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStatusAck) ProtoMessage() {}

func (x *WorkerStatusAck) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStatusAck.ProtoReflect.Descriptor instead.
func (*WorkerStatusAck) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{14}
}

func (x *WorkerStatusAck) GetStatus() WorkerStatusAck_Status {
	if x != nil {
		return x.Status
	}
	return WorkerStatusAck_RECEIVED
}

func (x *WorkerStatusAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// PipelineRequest - Pipeline 실행 요청
type PipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pipeline 고유 ID
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// Pipeline 이름 (예: "Full CI/CD", "Build and Test")
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Pipeline을 구성하는 Stage들
	Stages []*PipelineStage `protobuf:"bytes,3,rep,name=stages,proto3" json:"stages,omitempty"`
	// Repository 정보
	Repository string `protobuf:"bytes,4,opt,name=repository,proto3" json:"repository,omitempty"`
	// Commit SHA
	CommitSha string `protobuf:"bytes,5,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	// 트리거한 사용자/시스템
	TriggeredBy string `protobuf:"bytes,6,opt,name=triggered_by,json=triggeredBy,proto3" json:"triggered_by,omitempty"`
	// Pipeline 메타데이터
	Metadata      map[string]string `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelineRequest) Reset() {
	*x = PipelineRequest{}
	mi := &file_log_streaming_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineRequest) ProtoMessage() {}

func (x *PipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineRequest.ProtoReflect.Descriptor instead.
func (*PipelineRequest) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{15}
}

func (x *PipelineRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *PipelineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineRequest) GetStages() []*PipelineStage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *PipelineRequest) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *PipelineRequest) GetCommitSha() string {
	if x != nil {
		return x.CommitSha
	}
	return ""
}

func (x *PipelineRequest) GetTriggeredBy() string {
	if x != nil {
		return x.TriggeredBy
	}
	return ""
}

func (x *PipelineRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// PipelineStage - Pipeline을 구성하는 개별 Stage
type PipelineStage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stage ID (예: "build", "unit-test", "deploy-staging")
	StageId string `protobuf:"bytes,1,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	// Stage 타입 (Enum으로 타입 안정성 보장)
	Type StageType `protobuf:"varint,2,opt,name=type,proto3,enum=ottoscaler.v1.StageType" json:"type,omitempty"`
	// Stage 이름
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 이 Stage를 위한 Worker 수
	WorkerCount int32 `protobuf:"varint,4,opt,name=worker_count,json=workerCount,proto3" json:"worker_count,omitempty"`
	// 의존하는 Stage ID 목록 (병렬 실행 가능 판단용)
	DependsOn []string `protobuf:"bytes,5,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty"`
	// Stage별 설정 (환경변수, 파라미터 등)
	Config map[string]string `protobuf:"bytes,6,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 사용할 이미지 (비어있으면 기본 이미지 사용)
	Image string `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
	// 실행할 명령어
	Command []string `protobuf:"bytes,8,rep,name=command,proto3" json:"command,omitempty"`
	// 명령어 인자
	Args []string `protobuf:"bytes,9,rep,name=args,proto3" json:"args,omitempty"`
	// 타임아웃 (초 단위, 0이면 무제한)
	TimeoutSeconds int32 `protobuf:"varint,10,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	// 재시도 정책
	RetryPolicy   *RetryPolicy `protobuf:"bytes,11,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelineStage) Reset() {
	*x = PipelineStage{}
	mi := &file_log_streaming_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineStage) ProtoMessage() {}

func (x *PipelineStage) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineStage.ProtoReflect.Descriptor instead.
func (*PipelineStage) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{16}
}

func (x *PipelineStage) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *PipelineStage) GetType() StageType {
	if x != nil {
		return x.Type
	}
	return StageType_STAGE_TYPE_UNSPECIFIED
}

func (x *PipelineStage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineStage) GetWorkerCount() int32 {
	if x != nil {
		return x.WorkerCount
	}
	return 0
}

func (x *PipelineStage) GetDependsOn() []string {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *PipelineStage) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PipelineStage) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PipelineStage) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *PipelineStage) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *PipelineStage) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *PipelineStage) GetRetryPolicy() *RetryPolicy {
	if x != nil {
		return x.RetryPolicy
	}
	return nil
}

// RetryPolicy - Stage 실패 시 재시도 정책
type RetryPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 최대 재시도 횟수
	MaxAttempts int32 `protobuf:"varint,1,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	// 재시도 간격 (초)
	RetryDelaySeconds int32 `protobuf:"varint,2,opt,name=retry_delay_seconds,json=retryDelaySeconds,proto3" json:"retry_delay_seconds,omitempty"`
	// 재시도 가능한 실패 유형
	RetryableFailures []string `protobuf:"bytes,3,rep,name=retryable_failures,json=retryableFailures,proto3" json:"retryable_failures,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RetryPolicy) Reset() {
	*x = RetryPolicy{}
	mi := &file_log_streaming_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryPolicy) ProtoMessage() {}

func (x *RetryPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryPolicy.ProtoReflect.Descriptor instead.
func (*RetryPolicy) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{17}
}

func (x *RetryPolicy) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *RetryPolicy) GetRetryDelaySeconds() int32 {
	if x != nil {
		return x.RetryDelaySeconds
	}
	return 0
}

func (x *RetryPolicy) GetRetryableFailures() []string {
	if x != nil {
		return x.RetryableFailures
	}
	return nil
}

// PipelineProgress - Pipeline 실행 진행 상황
type PipelineProgress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pipeline ID
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// 현재 Stage ID
	StageId string `protobuf:"bytes,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	// Stage 상태
	Status StageStatus `protobuf:"varint,3,opt,name=status,proto3,enum=ottoscaler.v1.StageStatus" json:"status,omitempty"`
	// 상태 메시지
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// 이 Stage를 위해 생성된 Worker Pod 이름들
	WorkerPodNames []string `protobuf:"bytes,5,rep,name=worker_pod_names,json=workerPodNames,proto3" json:"worker_pod_names,omitempty"`
	// 진행률 (0-100)
	ProgressPercentage int32 `protobuf:"varint,6,opt,name=progress_percentage,json=progressPercentage,proto3" json:"progress_percentage,omitempty"`
	// 타임스탬프
	Timestamp string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Stage 시작 시간
	StartedAt string `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Stage 완료 시간 (완료된 경우)
	CompletedAt string `protobuf:"bytes,9,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// 에러 정보 (실패한 경우)
	ErrorMessage string `protobuf:"bytes,10,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Stage 메트릭
	Metrics       *StageMetrics `protobuf:"bytes,11,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelineProgress) Reset() {
	*x = PipelineProgress{}
	mi := &file_log_streaming_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineProgress) ProtoMessage() {}

func (x *PipelineProgress) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineProgress.ProtoReflect.Descriptor instead.
func (*PipelineProgress) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{18}
}

func (x *PipelineProgress) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *PipelineProgress) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *PipelineProgress) GetStatus() StageStatus {
	if x != nil {
		return x.Status
	}
	return StageStatus_STAGE_PENDING
}

func (x *PipelineProgress) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PipelineProgress) GetWorkerPodNames() []string {
	if x != nil {
		return x.WorkerPodNames
	}
	return nil
}

func (x *PipelineProgress) GetProgressPercentage() int32 {
	if x != nil {
		return x.ProgressPercentage
	}
	return 0
}

func (x *PipelineProgress) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *PipelineProgress) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *PipelineProgress) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *PipelineProgress) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *PipelineProgress) GetMetrics() *StageMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// StageMetrics - Stage 실행 메트릭
type StageMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 실행 시간 (초)
	DurationSeconds int32 `protobuf:"varint,1,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	// 성공한 Worker 수
	SuccessfulWorkers int32 `protobuf:"varint,2,opt,name=successful_workers,json=successfulWorkers,proto3" json:"successful_workers,omitempty"`
	// 실패한 Worker 수
	FailedWorkers int32 `protobuf:"varint,3,opt,name=failed_workers,json=failedWorkers,proto3" json:"failed_workers,omitempty"`
	// 총 Worker 수
	TotalWorkers int32 `protobuf:"varint,4,opt,name=total_workers,json=totalWorkers,proto3" json:"total_workers,omitempty"`
	// CPU 사용량 (평균)
	AvgCpuUsage float32 `protobuf:"fixed32,5,opt,name=avg_cpu_usage,json=avgCpuUsage,proto3" json:"avg_cpu_usage,omitempty"`
	// 메모리 사용량 (평균, MB)
	AvgMemoryMb   float32 `protobuf:"fixed32,6,opt,name=avg_memory_mb,json=avgMemoryMb,proto3" json:"avg_memory_mb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StageMetrics) Reset() {
	*x = StageMetrics{}
	mi := &file_log_streaming_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StageMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageMetrics) ProtoMessage() {}

func (x *StageMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_log_streaming_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageMetrics.ProtoReflect.Descriptor instead.
func (*StageMetrics) Descriptor() ([]byte, []int) {
	return file_log_streaming_proto_rawDescGZIP(), []int{19}
}

func (x *StageMetrics) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *StageMetrics) GetSuccessfulWorkers() int32 {
	if x != nil {
		return x.SuccessfulWorkers
	}
	return 0
}

func (x *StageMetrics) GetFailedWorkers() int32 {
	if x != nil {
		return x.FailedWorkers
	}
	return 0
}

func (x *StageMetrics) GetTotalWorkers() int32 {
	if x != nil {
		return x.TotalWorkers
	}
	return 0
}

func (x *StageMetrics) GetAvgCpuUsage() float32 {
	if x != nil {
		return x.AvgCpuUsage
	}
	return 0
}

func (x *StageMetrics) GetAvgMemoryMb() float32 {
	if x != nil {
		return x.AvgMemoryMb
	}
	return 0
}

var File_log_streaming_proto protoreflect.FileDescriptor

const file_log_streaming_proto_rawDesc = "" +
	"\n" +
	"\x13log_streaming.proto\x12\rottoscaler.v1\"\xa6\x02\n" +
	"\bLogEntry\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\x12\x14\n" +
	"\x05level\x18\x04 \x01(\tR\x05level\x12\x16\n" +
	"\x06source\x18\x05 \x01(\tR\x06source\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\x12A\n" +
	"\bmetadata\x18\a \x03(\v2%.ottoscaler.v1.LogEntry.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x01\n" +
	"\vLogResponse\x129\n" +
	"\x06status\x18\x01 \x01(\x0e2!.ottoscaler.v1.LogResponse.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\x03R\bsequence\"&\n" +
	"\x06Status\x12\a\n" +
	"\x03ACK\x10\x00\x12\t\n" +
	"\x05RETRY\x10\x01\x12\b\n" +
	"\x04DROP\x10\x02\"\xae\x01\n" +
	"\x12WorkerRegistration\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x129\n" +
	"\bmetadata\x18\x03 \x01(\v2\x1d.ottoscaler.v1.WorkerMetadataR\bmetadata\x12'\n" +
	"\x0fserver_endpoint\x18\x04 \x01(\tR\x0eserverEndpoint\"\x83\x02\n" +
	"\x0eWorkerMetadata\x12\x19\n" +
	"\bpod_name\x18\x01 \x01(\tR\apodName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1b\n" +
	"\tnode_name\x18\x03 \x01(\tR\bnodeName\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\x12A\n" +
	"\x06labels\x18\x05 \x03(\v2).ottoscaler.v1.WorkerMetadata.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9e\x02\n" +
	"\x14RegistrationResponse\x12B\n" +
	"\x06status\x18\x01 \x01(\x0e2*.ottoscaler.v1.RegistrationResponse.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x124\n" +
	"\x06config\x18\x04 \x01(\v2\x1c.ottoscaler.v1.LoggingConfigR\x06config\"S\n" +
	"\x06Status\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\x16\n" +
	"\x12ALREADY_REGISTERED\x10\x01\x12\x0f\n" +
	"\vSERVER_FULL\x10\x02\x12\x13\n" +
	"\x0fINVALID_REQUEST\x10\x03\"\xa4\x01\n" +
	"\rLoggingConfig\x12\x1d\n" +
	"\n" +
	"rate_limit\x18\x01 \x01(\x05R\trateLimit\x12\x1f\n" +
	"\vbuffer_size\x18\x02 \x01(\x05R\n" +
	"bufferSize\x12(\n" +
	"\x10max_message_size\x18\x03 \x01(\x05R\x0emaxMessageSize\x12)\n" +
	"\x10include_metadata\x18\x04 \x01(\bR\x0fincludeMetadata\"\xd9\x03\n" +
	"\fScaleRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1e\n" +
	"\n" +
	"repository\x18\x02 \x01(\tR\n" +
	"repository\x12\x1d\n" +
	"\n" +
	"commit_sha\x18\x03 \x01(\tR\tcommitSha\x12!\n" +
	"\fworker_count\x18\x04 \x01(\x05R\vworkerCount\x12O\n" +
	"\fbuild_config\x18\x05 \x03(\v2,.ottoscaler.v1.ScaleRequest.BuildConfigEntryR\vbuildConfig\x12!\n" +
	"\ftriggered_by\x18\x06 \x01(\tR\vtriggeredBy\x12\x16\n" +
	"\x06reason\x18\a \x01(\tR\x06reason\x12E\n" +
	"\bmetadata\x18\b \x03(\v2).ottoscaler.v1.ScaleRequest.MetadataEntryR\bmetadata\x1a>\n" +
	"\x10BuildConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xca\x02\n" +
	"\rScaleResponse\x12;\n" +
	"\x06status\x18\x01 \x01(\x0e2#.ottoscaler.v1.ScaleResponse.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\x0fprocessed_count\x18\x03 \x01(\x05R\x0eprocessedCount\x12(\n" +
	"\x10worker_pod_names\x18\x04 \x03(\tR\x0eworkerPodNames\x12\x1d\n" +
	"\n" +
	"started_at\x18\x05 \x01(\tR\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\x06 \x01(\tR\vcompletedAt\"M\n" +
	"\x06Status\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\n" +
	"\n" +
	"\x06FAILED\x10\x01\x12\x13\n" +
	"\x0fPARTIAL_SUCCESS\x10\x02\x12\x15\n" +
	"\x11ALREADY_PROCESSED\x10\x03\"{\n" +
	"\x13WorkerStatusRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12&\n" +
	"\x0fworker_pod_name\x18\x02 \x01(\tR\rworkerPodName\x12#\n" +
	"\rstatus_filter\x18\x03 \x01(\tR\fstatusFilter\"\x87\x02\n" +
	"\x14WorkerStatusResponse\x12\x1f\n" +
	"\vtotal_count\x18\x01 \x01(\x05R\n" +
	"totalCount\x12#\n" +
	"\rrunning_count\x18\x02 \x01(\x05R\frunningCount\x12#\n" +
	"\rpending_count\x18\x03 \x01(\x05R\fpendingCount\x12'\n" +
	"\x0fsucceeded_count\x18\x04 \x01(\x05R\x0esucceededCount\x12!\n" +
	"\ffailed_count\x18\x05 \x01(\x05R\vfailedCount\x128\n" +
	"\aworkers\x18\x06 \x03(\v2\x1e.ottoscaler.v1.WorkerPodStatusR\aworkers\"\x96\x03\n" +
	"\x0fWorkerPodStatus\x12\x19\n" +
	"\bpod_name\x18\x01 \x01(\tR\apodName\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"started_at\x18\x05 \x01(\tR\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\x06 \x01(\tR\vcompletedAt\x12\x1b\n" +
	"\tnode_name\x18\a \x01(\tR\bnodeName\x12\x15\n" +
	"\x06pod_ip\x18\b \x01(\tR\x05podIp\x12B\n" +
	"\x06labels\x18\t \x03(\v2*.ottoscaler.v1.WorkerPodStatus.LabelsEntryR\x06labels\x12#\n" +
	"\rerror_message\x18\n" +
	" \x01(\tR\ferrorMessage\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf4\x02\n" +
	"\x0eWorkerLogEntry\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\x12\x14\n" +
	"\x05level\x18\x04 \x01(\tR\x05level\x12\x16\n" +
	"\x06source\x18\x05 \x01(\tR\x06source\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\x12@\n" +
	"\fpod_metadata\x18\a \x01(\v2\x1d.ottoscaler.v1.WorkerMetadataR\vpodMetadata\x12G\n" +
	"\bmetadata\x18\b \x03(\v2+.ottoscaler.v1.WorkerLogEntry.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd5\x01\n" +
	"\x12LogForwardResponse\x12@\n" +
	"\x06status\x18\x01 \x01(\x0e2(.ottoscaler.v1.LogForwardResponse.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\x03R\bsequence\x12\x1f\n" +
	"\vthrottle_ms\x18\x04 \x01(\x05R\n" +
	"throttleMs\"&\n" +
	"\x06Status\x12\a\n" +
	"\x03ACK\x10\x00\x12\t\n" +
	"\x05RETRY\x10\x01\x12\b\n" +
	"\x04DROP\x10\x02\"\xb5\x03\n" +
	"\x18WorkerStatusNotification\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12J\n" +
	"\x06status\x18\x03 \x01(\x0e22.ottoscaler.v1.WorkerStatusNotification.StatusTypeR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\tR\ttimestamp\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12Q\n" +
	"\bmetadata\x18\x06 \x03(\v25.ottoscaler.v1.WorkerStatusNotification.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Q\n" +
	"\n" +
	"StatusType\x12\v\n" +
	"\aCREATED\x10\x00\x12\v\n" +
	"\aRUNNING\x10\x01\x12\r\n" +
	"\tCOMPLETED\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03\x12\x0e\n" +
	"\n" +
	"TERMINATED\x10\x04\"\x9a\x01\n" +
	"\x0fWorkerStatusAck\x12=\n" +
	"\x06status\x18\x01 \x01(\x0e2%.ottoscaler.v1.WorkerStatusAck.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\".\n" +
	"\x06Status\x12\f\n" +
	"\bRECEIVED\x10\x00\x12\v\n" +
	"\aIGNORED\x10\x01\x12\t\n" +
	"\x05ERROR\x10\x02\"\xe5\x02\n" +
	"\x0fPipelineRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x124\n" +
	"\x06stages\x18\x03 \x03(\v2\x1c.ottoscaler.v1.PipelineStageR\x06stages\x12\x1e\n" +
	"\n" +
	"repository\x18\x04 \x01(\tR\n" +
	"repository\x12\x1d\n" +
	"\n" +
	"commit_sha\x18\x05 \x01(\tR\tcommitSha\x12!\n" +
	"\ftriggered_by\x18\x06 \x01(\tR\vtriggeredBy\x12H\n" +
	"\bmetadata\x18\a \x03(\v2,.ottoscaler.v1.PipelineRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x03\n" +
	"\rPipelineStage\x12\x19\n" +
	"\bstage_id\x18\x01 \x01(\tR\astageId\x12,\n" +
	"\x04type\x18\x02 \x01(\x0e2\x18.ottoscaler.v1.StageTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12!\n" +
	"\fworker_count\x18\x04 \x01(\x05R\vworkerCount\x12\x1d\n" +
	"\n" +
	"depends_on\x18\x05 \x03(\tR\tdependsOn\x12@\n" +
	"\x06config\x18\x06 \x03(\v2(.ottoscaler.v1.PipelineStage.ConfigEntryR\x06config\x12\x14\n" +
	"\x05image\x18\a \x01(\tR\x05image\x12\x18\n" +
	"\acommand\x18\b \x03(\tR\acommand\x12\x12\n" +
	"\x04args\x18\t \x03(\tR\x04args\x12'\n" +
	"\x0ftimeout_seconds\x18\n" +
	" \x01(\x05R\x0etimeoutSeconds\x12=\n" +
	"\fretry_policy\x18\v \x01(\v2\x1a.ottoscaler.v1.RetryPolicyR\vretryPolicy\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8f\x01\n" +
	"\vRetryPolicy\x12!\n" +
	"\fmax_attempts\x18\x01 \x01(\x05R\vmaxAttempts\x12.\n" +
	"\x13retry_delay_seconds\x18\x02 \x01(\x05R\x11retryDelaySeconds\x12-\n" +
	"\x12retryable_failures\x18\x03 \x03(\tR\x11retryableFailures\"\xb3\x03\n" +
	"\x10PipelineProgress\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12\x19\n" +
	"\bstage_id\x18\x02 \x01(\tR\astageId\x122\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1a.ottoscaler.v1.StageStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12(\n" +
	"\x10worker_pod_names\x18\x05 \x03(\tR\x0eworkerPodNames\x12/\n" +
	"\x13progress_percentage\x18\x06 \x01(\x05R\x12progressPercentage\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\tR\ttimestamp\x12\x1d\n" +
	"\n" +
	"started_at\x18\b \x01(\tR\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\t \x01(\tR\vcompletedAt\x12#\n" +
	"\rerror_message\x18\n" +
	" \x01(\tR\ferrorMessage\x125\n" +
	"\ametrics\x18\v \x01(\v2\x1b.ottoscaler.v1.StageMetricsR\ametrics\"\xfc\x01\n" +
	"\fStageMetrics\x12)\n" +
	"\x10duration_seconds\x18\x01 \x01(\x05R\x0fdurationSeconds\x12-\n" +
	"\x12successful_workers\x18\x02 \x01(\x05R\x11successfulWorkers\x12%\n" +
	"\x0efailed_workers\x18\x03 \x01(\x05R\rfailedWorkers\x12#\n" +
	"\rtotal_workers\x18\x04 \x01(\x05R\ftotalWorkers\x12\"\n" +
	"\ravg_cpu_usage\x18\x05 \x01(\x02R\vavgCpuUsage\x12\"\n" +
	"\ravg_memory_mb\x18\x06 \x01(\x02R\vavgMemoryMb*\xde\x01\n" +
	"\tStageType\x12\x1a\n" +
	"\x16STAGE_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10STAGE_TYPE_BUILD\x10\x01\x12\x13\n" +
	"\x0fSTAGE_TYPE_TEST\x10\x02\x12\x15\n" +
	"\x11STAGE_TYPE_DEPLOY\x10\x03\x12\x14\n" +
	"\x10STAGE_TYPE_SETUP\x10\x04\x12\x16\n" +
	"\x12STAGE_TYPE_CLEANUP\x10\x05\x12\x15\n" +
	"\x11STAGE_TYPE_NOTIFY\x10\x06\x12\x17\n" +
	"\x13STAGE_TYPE_APPROVAL\x10\a\x12\x15\n" +
	"\x11STAGE_TYPE_CUSTOM\x10d*\x96\x01\n" +
	"\vStageStatus\x12\x11\n" +
	"\rSTAGE_PENDING\x10\x00\x12\x11\n" +
	"\rSTAGE_RUNNING\x10\x01\x12\x13\n" +
	"\x0fSTAGE_COMPLETED\x10\x02\x12\x10\n" +
	"\fSTAGE_FAILED\x10\x03\x12\x13\n" +
	"\x0fSTAGE_CANCELLED\x10\x04\x12\x11\n" +
	"\rSTAGE_SKIPPED\x10\x05\x12\x12\n" +
	"\x0eSTAGE_RETRYING\x10\x062\xd3\x02\n" +
	"\x11OttoscalerService\x12D\n" +
	"\aScaleUp\x12\x1b.ottoscaler.v1.ScaleRequest\x1a\x1c.ottoscaler.v1.ScaleResponse\x12F\n" +
	"\tScaleDown\x12\x1b.ottoscaler.v1.ScaleRequest\x1a\x1c.ottoscaler.v1.ScaleResponse\x12Z\n" +
	"\x0fGetWorkerStatus\x12\".ottoscaler.v1.WorkerStatusRequest\x1a#.ottoscaler.v1.WorkerStatusResponse\x12T\n" +
	"\x0fExecutePipeline\x12\x1e.ottoscaler.v1.PipelineRequest\x1a\x1f.ottoscaler.v1.PipelineProgress0\x012\xd1\x01\n" +
	"\x15OttoHandlerLogService\x12Y\n" +
	"\x11ForwardWorkerLogs\x12\x1d.ottoscaler.v1.WorkerLogEntry\x1a!.ottoscaler.v1.LogForwardResponse(\x010\x01\x12]\n" +
	"\x12NotifyWorkerStatus\x12'.ottoscaler.v1.WorkerStatusNotification\x1a\x1e.ottoscaler.v1.WorkerStatusAck2\xb6\x01\n" +
	"\x13LogStreamingService\x12E\n" +
	"\n" +
	"StreamLogs\x12\x17.ottoscaler.v1.LogEntry\x1a\x1a.ottoscaler.v1.LogResponse(\x010\x01\x12X\n" +
	"\x0eRegisterWorker\x12!.ottoscaler.v1.WorkerRegistration\x1a#.ottoscaler.v1.RegistrationResponseB3Z1github.com/Team-5-CodeCat/ottoscaler/pkg/proto/v1b\x06proto3"

var (
	file_log_streaming_proto_rawDescOnce sync.Once
	file_log_streaming_proto_rawDescData []byte
)

func file_log_streaming_proto_rawDescGZIP() []byte {
	file_log_streaming_proto_rawDescOnce.Do(func() {
		file_log_streaming_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_log_streaming_proto_rawDesc), len(file_log_streaming_proto_rawDesc)))
	})
	return file_log_streaming_proto_rawDescData
}

var file_log_streaming_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_log_streaming_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_log_streaming_proto_goTypes = []any{
	(StageType)(0),                           // 0: ottoscaler.v1.StageType
	(StageStatus)(0),                         // 1: ottoscaler.v1.StageStatus
	(LogResponse_Status)(0),                  // 2: ottoscaler.v1.LogResponse.Status
	(RegistrationResponse_Status)(0),         // 3: ottoscaler.v1.RegistrationResponse.Status
	(ScaleResponse_Status)(0),                // 4: ottoscaler.v1.ScaleResponse.Status
	(LogForwardResponse_Status)(0),           // 5: ottoscaler.v1.LogForwardResponse.Status
	(WorkerStatusNotification_StatusType)(0), // 6: ottoscaler.v1.WorkerStatusNotification.StatusType
	(WorkerStatusAck_Status)(0),              // 7: ottoscaler.v1.WorkerStatusAck.Status
	(*LogEntry)(nil),                         // 8: ottoscaler.v1.LogEntry
	(*LogResponse)(nil),                      // 9: ottoscaler.v1.LogResponse
	(*WorkerRegistration)(nil),               // 10: ottoscaler.v1.WorkerRegistration
	(*WorkerMetadata)(nil),                   // 11: ottoscaler.v1.WorkerMetadata
	(*RegistrationResponse)(nil),             // 12: ottoscaler.v1.RegistrationResponse
	(*LoggingConfig)(nil),                    // 13: ottoscaler.v1.LoggingConfig
	(*ScaleRequest)(nil),                     // 14: ottoscaler.v1.ScaleRequest
	(*ScaleResponse)(nil),                    // 15: ottoscaler.v1.ScaleResponse
	(*WorkerStatusRequest)(nil),              // 16: ottoscaler.v1.WorkerStatusRequest
	(*WorkerStatusResponse)(nil),             // 17: ottoscaler.v1.WorkerStatusResponse
	(*WorkerPodStatus)(nil),                  // 18: ottoscaler.v1.WorkerPodStatus
	(*WorkerLogEntry)(nil),                   // 19: ottoscaler.v1.WorkerLogEntry
	(*LogForwardResponse)(nil),               // 20: ottoscaler.v1.LogForwardResponse
	(*WorkerStatusNotification)(nil),         // 21: ottoscaler.v1.WorkerStatusNotification
	(*WorkerStatusAck)(nil),                  // 22: ottoscaler.v1.WorkerStatusAck
	(*PipelineRequest)(nil),                  // 23: ottoscaler.v1.PipelineRequest
	(*PipelineStage)(nil),                    // 24: ottoscaler.v1.PipelineStage
	(*RetryPolicy)(nil),                      // 25: ottoscaler.v1.RetryPolicy
	(*PipelineProgress)(nil),                 // 26: ottoscaler.v1.PipelineProgress
	(*StageMetrics)(nil),                     // 27: ottoscaler.v1.StageMetrics
	nil,                                      // 28: ottoscaler.v1.LogEntry.MetadataEntry
	nil,                                      // 29: ottoscaler.v1.WorkerMetadata.LabelsEntry
	nil,                                      // 30: ottoscaler.v1.ScaleRequest.BuildConfigEntry
	nil,                                      // 31: ottoscaler.v1.ScaleRequest.MetadataEntry
	nil,                                      // 32: ottoscaler.v1.WorkerPodStatus.LabelsEntry
	nil,                                      // 33: ottoscaler.v1.WorkerLogEntry.MetadataEntry
	nil,                                      // 34: ottoscaler.v1.WorkerStatusNotification.MetadataEntry
	nil,                                      // 35: ottoscaler.v1.PipelineRequest.MetadataEntry
	nil,                                      // 36: ottoscaler.v1.PipelineStage.ConfigEntry
}
var file_log_streaming_proto_depIdxs = []int32{
	28, // 0: ottoscaler.v1.LogEntry.metadata:type_name -> ottoscaler.v1.LogEntry.MetadataEntry
	2,  // 1: ottoscaler.v1.LogResponse.status:type_name -> ottoscaler.v1.LogResponse.Status
	11, // 2: ottoscaler.v1.WorkerRegistration.metadata:type_name -> ottoscaler.v1.WorkerMetadata
	29, // 3: ottoscaler.v1.WorkerMetadata.labels:type_name -> ottoscaler.v1.WorkerMetadata.LabelsEntry
	3,  // 4: ottoscaler.v1.RegistrationResponse.status:type_name -> ottoscaler.v1.RegistrationResponse.Status
	13, // 5: ottoscaler.v1.RegistrationResponse.config:type_name -> ottoscaler.v1.LoggingConfig
	30, // 6: ottoscaler.v1.ScaleRequest.build_config:type_name -> ottoscaler.v1.ScaleRequest.BuildConfigEntry
	31, // 7: ottoscaler.v1.ScaleRequest.metadata:type_name -> ottoscaler.v1.ScaleRequest.MetadataEntry
	4,  // 8: ottoscaler.v1.ScaleResponse.status:type_name -> ottoscaler.v1.ScaleResponse.Status
	18, // 9: ottoscaler.v1.WorkerStatusResponse.workers:type_name -> ottoscaler.v1.WorkerPodStatus
	32, // 10: ottoscaler.v1.WorkerPodStatus.labels:type_name -> ottoscaler.v1.WorkerPodStatus.LabelsEntry
	11, // 11: ottoscaler.v1.WorkerLogEntry.pod_metadata:type_name -> ottoscaler.v1.WorkerMetadata
	33, // 12: ottoscaler.v1.WorkerLogEntry.metadata:type_name -> ottoscaler.v1.WorkerLogEntry.MetadataEntry
	5,  // 13: ottoscaler.v1.LogForwardResponse.status:type_name -> ottoscaler.v1.LogForwardResponse.Status
	6,  // 14: ottoscaler.v1.WorkerStatusNotification.status:type_name -> ottoscaler.v1.WorkerStatusNotification.StatusType
	34, // 15: ottoscaler.v1.WorkerStatusNotification.metadata:type_name -> ottoscaler.v1.WorkerStatusNotification.MetadataEntry
	7,  // 16: ottoscaler.v1.WorkerStatusAck.status:type_name -> ottoscaler.v1.WorkerStatusAck.Status
	24, // 17: ottoscaler.v1.PipelineRequest.stages:type_name -> ottoscaler.v1.PipelineStage
	35, // 18: ottoscaler.v1.PipelineRequest.metadata:type_name -> ottoscaler.v1.PipelineRequest.MetadataEntry
	0,  // 19: ottoscaler.v1.PipelineStage.type:type_name -> ottoscaler.v1.StageType
	36, // 20: ottoscaler.v1.PipelineStage.config:type_name -> ottoscaler.v1.PipelineStage.ConfigEntry
	25, // 21: ottoscaler.v1.PipelineStage.retry_policy:type_name -> ottoscaler.v1.RetryPolicy
	1,  // 22: ottoscaler.v1.PipelineProgress.status:type_name -> ottoscaler.v1.StageStatus
	27, // 23: ottoscaler.v1.PipelineProgress.metrics:type_name -> ottoscaler.v1.StageMetrics
	14, // 24: ottoscaler.v1.OttoscalerService.ScaleUp:input_type -> ottoscaler.v1.ScaleRequest
	14, // 25: ottoscaler.v1.OttoscalerService.ScaleDown:input_type -> ottoscaler.v1.ScaleRequest
	16, // 26: ottoscaler.v1.OttoscalerService.GetWorkerStatus:input_type -> ottoscaler.v1.WorkerStatusRequest
	23, // 27: ottoscaler.v1.OttoscalerService.ExecutePipeline:input_type -> ottoscaler.v1.PipelineRequest
	19, // 28: ottoscaler.v1.OttoHandlerLogService.ForwardWorkerLogs:input_type -> ottoscaler.v1.WorkerLogEntry
	21, // 29: ottoscaler.v1.OttoHandlerLogService.NotifyWorkerStatus:input_type -> ottoscaler.v1.WorkerStatusNotification
	8,  // 30: ottoscaler.v1.LogStreamingService.StreamLogs:input_type -> ottoscaler.v1.LogEntry
	10, // 31: ottoscaler.v1.LogStreamingService.RegisterWorker:input_type -> ottoscaler.v1.WorkerRegistration
	15, // 32: ottoscaler.v1.OttoscalerService.ScaleUp:output_type -> ottoscaler.v1.ScaleResponse
	15, // 33: ottoscaler.v1.OttoscalerService.ScaleDown:output_type -> ottoscaler.v1.ScaleResponse
	17, // 34: ottoscaler.v1.OttoscalerService.GetWorkerStatus:output_type -> ottoscaler.v1.WorkerStatusResponse
	26, // 35: ottoscaler.v1.OttoscalerService.ExecutePipeline:output_type -> ottoscaler.v1.PipelineProgress
	20, // 36: ottoscaler.v1.OttoHandlerLogService.ForwardWorkerLogs:output_type -> ottoscaler.v1.LogForwardResponse
	22, // 37: ottoscaler.v1.OttoHandlerLogService.NotifyWorkerStatus:output_type -> ottoscaler.v1.WorkerStatusAck
	9,  // 38: ottoscaler.v1.LogStreamingService.StreamLogs:output_type -> ottoscaler.v1.LogResponse
	12, // 39: ottoscaler.v1.LogStreamingService.RegisterWorker:output_type -> ottoscaler.v1.RegistrationResponse
	32, // [32:40] is the sub-list for method output_type
	24, // [24:32] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_log_streaming_proto_init() }
func file_log_streaming_proto_init() {
	if File_log_streaming_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_log_streaming_proto_rawDesc), len(file_log_streaming_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_log_streaming_proto_goTypes,
		DependencyIndexes: file_log_streaming_proto_depIdxs,
		EnumInfos:         file_log_streaming_proto_enumTypes,
		MessageInfos:      file_log_streaming_proto_msgTypes,
	}.Build()
	File_log_streaming_proto = out.File
	file_log_streaming_proto_goTypes = nil
	file_log_streaming_proto_depIdxs = nil
}
