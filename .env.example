# Ottoscaler 환경 설정 템플릿
# 이 파일은 개발자별 환경 설정의 예시입니다
# 
# 실제 사용법:
#   1. make setup-user USER=한진우  # 자동으로 .env.hanjinwoo.local 생성
#   2. ENV_FILE=".env.hanjinwoo.local" make run-app  # 환경 파일 지정하여 실행
#
# ⚠️ 이 파일을 직접 수정하지 마세요. setup-user 스크립트가 자동으로 생성합니다.

# gRPC 서버 설정
GRPC_PORT=9090
OTTO_HANDLER_HOST=otto-handler:8080      # Otto-handler gRPC 서버 주소

# Kubernetes 설정 - 개발자별 네임스페이스
NAMESPACE=default                         # 개발자별로 자동 설정 (예: hanjinwoo-dev)

# Worker Pod 설정  
OTTO_AGENT_IMAGE=busybox:latest
WORKER_CPU_LIMIT=500m
WORKER_MEMORY_LIMIT=128Mi

# 로깅 설정
LOG_LEVEL=info

# 개발자 정보 (setup-user 스크립트에서 자동 설정)
DEVELOPER_NAME=한진우
DEVELOPER_ENG_NAME=hanjinwoo
DEVELOPER_ID=1

# Kind 클러스터 설정
KIND_CLUSTER_NAME=ottoscaler-hanjinwoo   # 개발자별로 자동 설정

# 🔧 개발자별 자동 할당:
# - 한진우: Cluster:ottoscaler-hanjinwoo, Namespace:hanjinwoo-dev
# - 장준영: Cluster:ottoscaler-jangjunyoung, Namespace:jangjunyoung-dev
# - 고민지: Cluster:ottoscaler-gominji, Namespace:gominji-dev
# - 이지윤: Cluster:ottoscaler-leejiyun, Namespace:leejiyun-dev
# - 김보아: Cluster:ottoscaler-kimboa, Namespace:kimboa-dev
# - 유호준: Cluster:ottoscaler-yoohojun, Namespace:yoohojun-dev

# 환경별 설정 예시:
#
# 로컬 개발 (Kind):
# GRPC_PORT=9090
# OTTO_HANDLER_HOST=localhost:8080
# 
# Kubernetes 내부:
# GRPC_PORT=9090
# OTTO_HANDLER_HOST=otto-handler.default.svc.cluster.local:8080
#
# 프로덕션:
# GRPC_PORT=9090
# OTTO_HANDLER_HOST=otto-handler.production.svc.cluster.local:8080
# LOG_LEVEL=warn